Relative Xpath :

//*[@attribute ='value']


//tagname/classname[@attribute ='value']

//android.widget.TextView[@content-desc='Accessibility']

if we want 2 or more attributes to be mentioned

//android.widget.TextView[@content-desc='Accessibility' and @resource-id='android:id/text1']

//android.widget.TextView[@content-desc='Accessibility' or @resource-id='android:id/text1']

parent to child  -> '/'


//android.widget.ListView/android.widget.TextView[@content-desc='Accessibility' or @resource-id='android:id/text1']

//android.widget.TextView[contains(@content-desc,'Accessib')]

keyword following-sibling preceding-sibling


//android.widget.ListView/android.widget.TextView[@content-desc='Accessibility' and @resource-id='android:id/text1']/following-sibling::android.widget.TextView

//android.widget.ListView/android.widget.TextView[@content-desc='Accessibility' and @resource-id='android:id/text1']/following-sibling::android.widget.TextView[@content-desc='Graphics']

//android.widget.ListView/android.widget.TextView[@content-desc='Accessibility' and @resource-id='android:id/text1']/following-sibling::android.widget.TextView



Android native locator:

UISelector -> text,class,xpath,resource-id
it can do a action onthe elements  - click and scrolling 

Syntax:

new UiSelector().text(\"text\") -> this is for text
new UiSelector().resourceId(\"android:id/text1\") -> this is for resource id
new UiSelector().className(\"android.widget.TextView\") -> this is for class name representation
new UiSelector().description(\"App\") -> to identify thew content description
new UiSelector().className(\"android.widget.ListView
\").childSelector(new UiSelector().text(\"App\")) -> this represnets chaining selecotr


UiSelecotor does nto support xpath

Example :
 driver.findElement(AppiumBy.androidUIAutomator("new UiSelector().className(\\\"android.widget.ListView\n" +
                "                \\\").childSelector(new UiSelector().text(\\\"App\\\")")).click();
                
                
IOS native locators:
//XCUIElementTypeButton[@name='Edit']      

//XCUIElementTypeImage[@name='minus.circle.fill']     

//XCUIElementTypeButton[@name="Remove Create new task, 8:00 PM Click the plus button to add a scheduled task."]/XCUIElementTypeImage[@name='minus.circle.fill']

//XCUIElementTypeButton[@name="Remove Create new task, 8:00 PM Click the plus button to add a scheduled task."]/child::XCUIElementTypeImage[@name='minus.circle.fill']

IOS Specific locators:

ios Class chain - when we want to use severalelvel of element to identify we use this and its native to ios 

Example:
AppiumBy.iosClassChain("**/type['property== value ']/**/type)

**/XCUIElementTypeOther/**/XCUIElementTypeOther
**/XCUIElementTypeCell/**/XCUIElementTypeButton[`name=='circle'`]

ios ns predicate string     - onlyfor ios/apple , highly performance oriented in finding the elements
we need to mention the properties name 



AppiumBy.iOSNsPredicateString("label== ''")
